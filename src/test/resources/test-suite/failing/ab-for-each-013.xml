<t:test xmlns:t="http://xproc.org/ns/testsuite/3.0" expected="pass">
   <t:info>
      <t:title>AB for-each 013</t:title>
      <t:revision-history>
         <t:revision>
            <t:date>2019-05-25</t:date>
            <t:author>
               <t:name>Achim Berndzen</t:name>
            </t:author>
            <t:description xmlns="http://www.w3.org/1999/xhtml">
               <p>Initial test</p>
            </t:description>
         </t:revision>
      </t:revision-history>
   </t:info>
   <t:description xmlns="http://www.w3.org/1999/xhtml">
      <p>Tests connections to loop's parent scope.</p>
   </t:description>
   <t:pipeline>
      <p:declare-step name="pipeline" xmlns:p="http://www.w3.org/ns/xproc" version="3.0">
         <p:input port="source"/>
         <p:output port="result" sequence="true"/>
         <p:variable name="var" select="42" />
         
         <p:identity name="producer">
            <p:with-input><doc /></p:with-input>
         </p:identity>
         <p:for-each>
           <p:with-input select="/doc/para" >
              <p:pipe step="pipeline" port="source" />
           </p:with-input>
           <p:add-attribute attribute-name="att" attribute-value="{$var}">
              <p:with-input pipe="@producer" />
           </p:add-attribute>
         </p:for-each>
         
         <p:wrap-sequence wrapper="wrapper" />
      </p:declare-step>
   </t:pipeline>
   <t:input port="source">
      <doc>
         <title>Some title</title>
         <para>Paragraph 1.</para>
         <para>Paragraph 2.</para>
         <para>Paragraph 3.</para>
      </doc>
      
   </t:input>
   <t:schematron>
      <s:schema xmlns:s="http://purl.oclc.org/dsdl/schematron" xmlns="http://www.w3.org/1999/xhtml">
         <s:pattern>
            <s:rule context="/">
               <s:assert test="wrapper">The pipeline root is not wrapper.</s:assert>
               <s:assert test="count(wrapper/*)=3">Wrapper does not have three children.</s:assert>
               <s:assert test="count(wrapper/doc)=3">Wrapper does not have three children named 'doc'.</s:assert>
               <s:assert test="wrapper/doc[1]/@att='42'">Value of doc[1]/@att is not 42.</s:assert>
               <s:assert test="wrapper/doc[2]/@att='42'">Value of doc[2]/@att is not 42.</s:assert>
               <s:assert test="wrapper/doc[3]/@att='42'">Value of doc[3]/@att is not 42.</s:assert>
            </s:rule>
         </s:pattern>
      </s:schema>
   </t:schematron>
</t:test>